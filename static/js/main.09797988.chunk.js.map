{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","reorderGoods","goods","sortType","isReversed","visibleGoods","sort","good1","good2","ALPHABET","localeCompare","LENGTH","length","Error","error","console","log","reverse","goodsFromServer","App","useState","reversed","setReversed","NONE","setSortType","changed","setChanged","className","type","classNames","onClick","current","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAKKA,E,0EAME,SAASC,EACdC,EAAiBC,EAAkBC,GAEnC,IAAMC,EAAY,YAAOH,GAEzB,IACEG,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQL,GACN,KAAKH,EAASS,SACZ,OAAOF,EAAMG,cAAcF,GAC7B,KAAKR,EAASW,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAC9B,QACE,MAAM,IAAIC,MAAM,6BAGtB,MAAOC,GAEPC,QAAQC,IAAIF,GAGd,OAAIV,EACKC,EAAaY,UAGfZ,G,SA/BJL,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAkCE,IAAMkB,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAgB,WAC3B,MAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCF,mBAASpB,EAASuB,MAAlD,mBAAOpB,EAAP,KAAiBqB,EAAjB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KAEA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAY1B,IAAaH,EAASS,WAEtCqB,QAAS,WACPN,EAAYxB,EAASS,UACrBiB,GAAW,IATf,iCAeA,wBACEE,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAY1B,IAAaH,EAASW,SAEtCmB,QAAS,WACPN,EAAYxB,EAASW,QACrBe,GAAW,IATf,4BAeA,wBACEE,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAaR,IAEjBS,QAAS,WACPR,GAAY,SAAAS,GAAO,OAAKA,MAR5B,sBAcEV,GAAYI,IACZ,wBACEG,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPR,GAAY,GACZE,EAAYxB,EAASuB,MACrBG,GAAW,IANf,sBAcJ,6BACE,6BACGzB,EACCiB,EACAf,EACAkB,GACAW,KAAI,SAAAC,GAAI,OACR,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,cC5HnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.09797988.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nexport function reorderGoods(\n  goods: string[], sortType: number, isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  try {\n    visibleGoods.sort((good1, good2): number => {\n      switch (sortType) {\n        case SortType.ALPHABET:\n          return good1.localeCompare(good2);\n        case SortType.LENGTH:\n          return good1.length - good2.length;\n        default:\n          throw new Error('No filter was choosen');\n      }\n    });\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.log(error);\n  }\n\n  if (isReversed) {\n    return visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App: React.FC = () => {\n  const [reversed, setReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [changed, setChanged] = useState(false);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-info',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n          onClick={() => {\n            setSortType(SortType.ALPHABET);\n            setChanged(true);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={() => {\n            setSortType(SortType.LENGTH);\n            setChanged(true);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-warning',\n            { 'is-light': !reversed },\n          )}\n          onClick={() => {\n            setReversed(current => !current);\n          }}\n        >\n          Reverse\n        </button>\n\n        {(reversed || changed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setReversed(false);\n              setSortType(SortType.NONE);\n              setChanged(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {reorderGoods(\n            goodsFromServer,\n            sortType,\n            reversed,\n          ).map(good => (\n            <li\n              key={good}\n              data-cy=\"Good\"\n            >\n              {good}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}